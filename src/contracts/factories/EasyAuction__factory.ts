/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import type { EasyAuction } from "../EasyAuction";

export class EasyAuction__factory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EasyAuction {
    return new Contract(address, _abi, signerOrProvider) as EasyAuction;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "priceNumerator",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "priceDenominator",
        type: "uint96",
      },
    ],
    name: "AuctionCleared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "userId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "buyAmount",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "sellAmount",
        type: "uint96",
      },
    ],
    name: "CancellationSellOrder",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "userId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "buyAmount",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "sellAmount",
        type: "uint96",
      },
    ],
    name: "ClaimedFromOrder",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "_auctioningToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "_biddingToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "orderCancellationEndDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "auctionEndDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "_auctionedSellAmount",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "_minBuyAmount",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minimumBiddingAmountPerOrder",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minFundingThreshold",
        type: "uint256",
      },
    ],
    name: "NewAuction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "userId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "buyAmount",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "sellAmount",
        type: "uint96",
      },
    ],
    name: "NewSellOrder",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "userId",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "NewUser",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "userId",
        type: "uint64",
      },
    ],
    name: "UserRegistration",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        internalType: "uint96",
        name: "priceNumerator",
        type: "uint96",
      },
      {
        internalType: "uint96",
        name: "priceDenominator",
        type: "uint96",
      },
    ],
    name: "emitAuctionCleared",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "userId",
        type: "uint64",
      },
      {
        internalType: "uint96",
        name: "buyAmount",
        type: "uint96",
      },
      {
        internalType: "uint96",
        name: "sellAmount",
        type: "uint96",
      },
    ],
    name: "emitCancellationSellOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "userId",
        type: "uint64",
      },
      {
        internalType: "uint96",
        name: "buyAmount",
        type: "uint96",
      },
      {
        internalType: "uint96",
        name: "sellAmount",
        type: "uint96",
      },
    ],
    name: "emitClaimedFromOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_auctioningToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_biddingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "orderCancellationEndDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "auctionEndDate",
        type: "uint256",
      },
      {
        internalType: "uint96",
        name: "_auctionedSellAmount",
        type: "uint96",
      },
      {
        internalType: "uint96",
        name: "_minBuyAmount",
        type: "uint96",
      },
      {
        internalType: "uint256",
        name: "minimumBiddingAmountPerOrder",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minFundingThreshold",
        type: "uint256",
      },
    ],
    name: "emitNewAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "userId",
        type: "uint64",
      },
      {
        internalType: "uint96",
        name: "buyAmount",
        type: "uint96",
      },
      {
        internalType: "uint96",
        name: "sellAmount",
        type: "uint96",
      },
    ],
    name: "emitNewSellOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "userId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "emitNewUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "userId",
        type: "uint64",
      },
    ],
    name: "emitUserRegistration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];
